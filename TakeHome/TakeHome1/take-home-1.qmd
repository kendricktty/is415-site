---
title: "TH1: Geospatial Analytics for Social Good"
image: "../../_site/HandsOn/Hands-on_Ex03/hands-on-3_files/figure-html/unnamed-chunk-42-1.png"
subtitle: "Take Home Exercise 1: Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar"
author: "Kendrick Teo"
date: "2024-09-07"
date-modified: "last-modified"

execute: 
  eval: true
  echo: true
  freeze: true
---

## TH1.1 Setting the Scene

Millions of people have their lives shattered by armed conflict every year. One of these is the [**Myanmar Civil War**](https://en.wikipedia.org/wiki/Myanmar_civil_war_(2021%E2%80%93present)), a significant escalation of the long-running [Myanmar Conflict](https://en.wikipedia.org/wiki/Myanmar_conflict) in response to the [2021 coup d'etat](https://en.wikipedia.org/wiki/2021_Myanmar_coup_d%27%C3%A9tat).

Geospatial analtyics holds the potential to address complex problems facing society, such as this one. This study serves to discover the sptial and spatio-temporal distribution (spread) of the latest armed conflict in [Myanmar](https://en.wikipedia.org/wiki/Myanmar) by applying spatial point pattern analysis (SPPA) methods.

### TH1.1.1 Loading R packages

The `R` packages we will use today are:

- `sf`
- `tmap`
- `spatstat`
- `sparr`
- `raster`
- `maptools`

```{r}
pacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)
```

## TH1.2 The Data

Armed conflict data in Myanmar between 2010 and 2023 was downloaded from the [Armed Conflict Location & Event Database (ACLED)](https://acleddata.com/), an independent, impartial, international non-profit organization collecting data on violent conflicts and protests in all countries and territories in the world. We will be superimposing these locations with the geogrpahical boundary and subdivisions of the country, from the **Myanmar Information Management Unit** (MIMU).

We are interested in conflict events from 2019 onwards - starting from a year before the COVID-19 pandemic and 2 years before the 2021 coup - cumulating into the civil war of today.

### TH1.2.1 Loading armed conflict data into `tibble` object

Here we load our *aspatial* armed conflict data into a `tibble` object.

```{r}
acled_mya <- read_csv("data/2021-01-01-2024-09-16-Southeast_Asia-Myanmar.csv")
head(acled_mya)
```

### TH1.2.2 Loading administrative boundaries into `sf` object

Three representations of Myanmar's geography exist on the MIMU repository - `Admin1` subdivides the country into its states and regions only, while `Admin2` subdivides the country by its smaller districts, and `Admin3` its townships. Further, the ACLED labels each incident with all 3 representations. For simplicity and ease of understanding, we shall use the `Admin1` representation.

```{r}
mmr_admin1 <- st_read(dsn = "data/mmr_polbnda_adm1_250k_mimu_1", layer = "mmr_polbnda_adm1_250k_mimu_1")
mmr_admin1
qtm(mmr_admin1) # Plots the national boundaries of Myanmar
```

### TH1.2.3 Creating `sf` data frame from aspatial data

The ACLED `tibble` contains coordinates, making it useful for plotting on our map as points. We can therefore use it to create an `sf` data frame using which we can plot our points on a map. The EPSG format of the import coordinates should be [`4326`](https://epsg.io/4326), corresponding to the WGS84 Geographic Coordinate System.

```{r}
acled_mya_sf <- st_as_sf(acled_mya, coords = c("longitude", "latitude"), crs = 4326)
```

## TH1.3 A brief summary of Myanmar and the Myanmar Conflict

The second largest country in Southeast Asia at 676,578 square kilometres and an [ASEAN](https://en.wikipedia.org/wiki/ASEAN) member state, **Myanmar** features fertile tropical deltas in the south and the rugged Himalayan foothills to its north. It shares borders with China to the north and northeast, Laos and Thailand to the east and Southeast, and Bangladesh and India to the west and northwest. Despite having a 2800km coastline providing access to deep-sea ports and an abundance in natural resources including arable land, forests, minerals and natural gas, conflict-ridden Myanmar is considered a **least developed country**, with a GNP per capita of US$1144 (2011) (Myanmar Information Management Unit, n.d.) and a HDI of 0.6 (UNDP, 2024). Consequently, agriculture accounts for 36% of GDP and 60-70% of employment.

Myanmar is organised into seven **states**, seven **regions**, and one **union territory** - its capital, **Naypyitaw**, located at around the country's geographic centre. The states - Chin, Kachin, Kayah, Kyain, Mon, Rakhine and Shan - are largely populated by the national ethnic communities, while most of the inhabitants of its *regions* - Ayeyarwady, Bago, Mandalay, Sagaing, Tanintharyi and largest city [Yangon](https://en.wikipedia.org/wiki/Yangon) - are of the majority Bamar (Burmese) ethnicity. The following code chunk plots the states and regions of Myanmar into an interactive map.

```{r}
tmap_mode('view')
tm_shape(mmr_admin1) + tm_polygons()
tmap_mode('plot')
```

Crucially, Myanmar is one of the world's most ethnically diverse countries, with as many as 135 different ethnic groups boasting a rich tapestry of culture and religious history (Maizland, 2022). While this may paint a rosy picture of harmony on the surface, this is far from the case in the country. While the majority Bamar enjoy a privileged position in society and have held of government and military positions, many of the country's minority groups grapple with systemic discrimination, lack of economic opportunity and development, minimum representation in government, and abuses at the hands of the military.

The code chunk below visualises Myanmar's ethnic breakdown in a pie chart, based on data from the US CIA World Factbook and presented by Maizland (2022).

```{r}
# Plot the composition of ethnic groups in Myanmar
x <- c(2, 2, 3, 4, 5, 7, 9, 68)
y <- c("Indian", "Mon", "Chinese", "Rakhine", "Other", "Karen", "Shan", "Bamar")

y <- paste(y, x)
y <- paste(y, "%", sep="")

pie(x, labels = y, main = "Composition of Ethnic Groups in Myanmar (Maizland, 2022)", col = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
# legend("topright", y, cex = 0.8, fill = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"))

```
Because of this disparity and partially as a result of the divide-and-conquer strategy used by the British during colonial rule, lengthy armed conflicts have ensued since Myanmar's independence between the ethnic groups (comprising ethnic armed organisations and smaller militias) and the Tatmadaw, the military, producing what has become known as the world's longest continuing civil war (Rieffel, 2019), over issues from greater autonomy to control of natural resources. Even before the 2021 coup, the country still experienced armed conflict - since 2017, the Tatmadaw had been mounting a brutal campaign against the ethnic Rohingya (Albert & Maizland, 2020). While the administration of then-state chancellor Aung San Suu Kyi defended their actions, restricting press freedoms in the process, rights groups and UN officials claim the Tatmadaw's actions amounted to genocide.

## TH1.4 Data wrangling

### TH1.4.1 Coordinate system conversion

The EPSG area code for Myanmar is [`4239`](https://epsg.io/4239), while the WGS 84-compatible code is [`32647`](https://epsg.io/32647). Since we're creating an `owin` object later, we need to first convert our coordinate system.

```{r}
acled_mya_sf <- acled_mya_sf %>% st_transform(crs = 32647)
mmr_admin1 <- mmr_admin1 %>% st_transform(crs = 32647)
tm_shape(mmr_admin1) + tm_polygons() + tm_shape(acled_mya_sf) + tm_dots(size = 0.05)
```

### TH1.4.2 Data cleansing

Since the data is timestamped, we are able to plot and compare the frequency of conflict events *over time*. Before we do, though, we need to standardise the date stamps, then compartmentalise them into their year, month and day components, so that we can perform spatial-temporal point patterns analysis (STPPA) later. We will also aim to segregate events by whether or not they occurred before the coup on **February 1, 2021**.

A visualisation of the spatial-temporial distribution of points can be found in **Annex A**. Notice the consistent appearance throughout the entire study period of a large cluster of points towards the west of the country - roughly the location of Rahkine state on the border with Bangladesh.

Additionally, the ACLED dataset splits the conflict incidents in **Shan state** into *North*, *South* and *East*, and incidents in the **Bago region** into *East* and *West*. We need to combine these into 

```{r}
acled_mya_sf <- acled_mya_sf %>%
    mutate(event_date = dmy(event_date)) %>%
    mutate(DayOfYear = yday(event_date)) %>%
    mutate(Month_num = format(event_date, "%Y-%m")) %>%  # Year-Month format
    mutate(Month_fac = factor(format(event_date, "%B %Y"))) %>% # Full month
    mutate(Quarter_num = ((year(event_date) - 2021) * 4) + quarter(event_date)) %>% # Numbers quarters for STKDE
    mutate(Quarter = paste(year(event_date), "-", quarter(event_date), "Q"))  %>% # Quarter format
    mutate(admin1 = case_when(
      admin1 %in% c("Shan-North", "Shan-South", "Shan-East") ~ "Shan",
      admin1 %in% c("Bago-East", "Bago-West") ~ "Bago",
      TRUE ~ admin1
    ))
```
```{r}
#| echo: false
admin1_unique <- unique(acled_mya_sf$admin1)
admin1_unique
```
```{r}
#| echo: false
quarter_numbers <- unique(acled_mya_sf$Quarter_num)
quarter_numbers
```
```{r}
#| echo: false
quarters <- unique(acled_mya_sf$Quarter) %>% unlist()
print(length(quarters))
quarters
```

```{r}
tm_shape(mmr_admin1) + tm_polygons() + tm_shape(acled_mya_sf) + tm_dots(size = 0.05)
```
```{r}
tm_shape(mmr_admin1) + tm_polygons() + tm_shape(acled_mya_sf) + tm_dots(size = 0.05) + tm_facets(by="Quarter_num", free.coords=FALSE, drop.units = TRUE)
```
```{r}
acled_mya_sf
```
### TH1.4.3 Using `owin` to confine study area within Myanmar borders

Finally, we need to create an `owin` object that will be combined with any `ppp` objects we create later for SPPA.

```{r}
mmr_admin1_owin <- as.owin(mmr_admin1)
plot(mmr_admin1_owin)
# summary(mmr_admin1_owin)
```

## TH1.5 Preliminary analysis

### TH1.5.1 Exploratory Data Analysis (EDA)

We can quickly gain some meaningful insights from our dataset using basic EDA techniques.

For instance, we can use a histogram to plot the distribution of fatalities by quarter.

#### TH1.5.1.1 Plotting number of fatalities by quarter

```{r}
acled_mya_fatalities_by_quarter <- acled_mya_sf %>%
  group_by(Quarter_num) %>%
  summarise(`FAT` = sum(`fatalities`)) %>%
  ungroup() %>%
  pivot_wider(names_from = Quarter_num, values_from = FAT)
acled_mya_fatalities_by_quarter
```

### TH1.5.2 Overarching Spatial-Temporal KDE

The next step will be kernel density estimation (KDE). We can then zoom in on these areas for deeper research on why this is the case.

As always, we start by creating `ppp` objects out of our `sf` objects, and checking for duplicates.

```{r}
acled_mya_sf_quarters <- acled_mya_sf %>% select(Quarter_num)
acled_mya_quarters_ppp <- as.ppp(acled_mya_sf_quarters)
any(duplicated(acled_mya_quarters_ppp))
```

Since there are duplicates, we need to handle them using jittering.
```{r}
acled_mya_quarters_ppp <- rjitter(acled_mya_quarters_ppp, retry=TRUE, nsim=1, drop=TRUE)
any(duplicated(acled_mya_quarters_ppp))
```

Finally, we join the `owin` object mapping the borders of Myanmar to the `ppp` object.
```{r}
acled_mya_quarters_ppp <- acled_mya_quarters_ppp[mmr_admin1_owin]
plot(acled_mya_quarters_ppp)
```

We can now perform spatial-temporal KDE (STKDE).
```{r}
st_kde <- spattemp.density(acled_mya_quarters_ppp)
summary(st_kde)
```
After performing STKDE, we are able to plot the quarterly STKDE objects between 2021 and September 2024. The full set of plots can be found in Annex A, but the plot for Q1 2021 (id 15) is of particular interest because of the larger than usual densities around the **Saigaing** and **Chin** areas, as well as near **Yangon**.
```{r}
i = 15
plot(st_kde, quarter_numbers[i], override.par=FALSE, fix.range=TRUE, main=paste("Spatial-temporal KDE for", quarters[i]))
```
### TH1.5.3 STKDE on Data Subset

The ACLED classifies armed conflict events by mode and intensity of attack and by whether civilians are targeted. Knowing that a significant part of the armed violence in Myanmar is due to systemic discrimination on the part of the government or military, it would make sense to repeat the process and plot STKDEs on the subset of the data concerning violence against civilians.

```{r}
unique_type <- unique(acled_mya_sf$event_type)
unique_type
```

```{r}
acled_sf_againstCivilians <- acled_mya_sf %>% filter(event_type == "Violence against civilians")
acled_sf_againstCivilians
acled_sf_againstCivilians <- acled_sf_againstCivilians %>% select(Quarter_num)
```
```{r}
acled_mya_againstCivilians_ppp <- as.ppp(acled_sf_againstCivilians)
any(duplicated(acled_mya_againstCivilians_ppp))
acled_mya_againstCivilians_ppp <- rjitter(acled_mya_againstCivilians_ppp, retry=TRUE, nsim=1, drop=TRUE)
any(duplicated(acled_mya_againstCivilians_ppp))
acled_mya_againstCivilians_ppp <- acled_mya_againstCivilians_ppp[mmr_admin1_owin]
plot(acled_mya_againstCivilians_ppp)
```
```{r}
st_kde_againstCivilians <- spattemp.density(acled_mya_quarters_ppp)
summary(st_kde_againstCivilians)
for (i in 1: length(quarter_numbers)) {
  plot(st_kde_againstCivilians, quarter_numbers[i], override.par=FALSE, fix.range=TRUE, main=paste("Spatial-temporal KDE for violence against civilians events in quarter", quarters[i]))
}
```

## TH1.6 Zooming in

The preliminary KDE plot identified large clusters of armed conflict in the **Yangon** area in the south off the Andaman sea, as well as the **Saigaing** and **Chin** areas to the central-west. These indications make good candidates for further investigation.

Additionally, we will be exploring the **Rakhine** state area bordering Bangladesh, and the *Kra Isthmus*, the narrow isthmus linking central Thailand to Peninsula Malaysia - which the overall STKDE failed to pick up. Rakhine state is the epicentre of the Rohingya crisis facing the eponymous Muslim ethnic group, which has actually been facing discrimination since the late 1970s 

### TH1.6.1 Fixed-bandwidth KDE

### TH1.6.2 Adaptive-bandwidth KDE

### TH1.6.3 Nearest neighbour analysis

### TH1.6.4 Second order spatial point patterns analysis

#### TH1.6.4.1 F-function

#### TH1.6.4.2 G-function

#### TH1.6.4.3 K-function

#### TH1.6.4.4 L-function

## TH1.7 Rakhine State

### TH1.7.1 Fixed-bandwidth KDE

### TH1.7.2 Adaptive-bandwidth KDE

### TH1.7.3 Nearest neighbour analysis

### TH1.7.4 Second order spatial point patterns analysis

#### TH1.7.4.1 F-function

#### TH1.7.4.2 G-function

#### TH1.7.4.3 K-function

#### TH1.7.4.4 L-function

## References

1. Albert, E., & Maizland, L. (2020, January 23). What forces are fueling Myanmar’s Rohingya crisis? Council on Foreign Relations. [https://www.cfr.org/backgrounder/rohingya-crisis](https://www.cfr.org/backgrounder/rohingya-crisis)
2. Maizland, L. (2022, January 31). Myanmar’s troubled history: Coups, military rule, and ethnic conflict. Council on Foreign Relations. [https://www.cfr.org/backgrounder/myanmar-history-coup-military-rule-ethnic-conflict-rohingya](https://www.cfr.org/backgrounder/myanmar-history-coup-military-rule-ethnic-conflict-rohingya)
3. Myanmar Information Management Unit. (n.d.). Country Overview. Retrieved 16 September 2024, from [https://www.themimu.info/country-overview](https://www.themimu.info/country-overview)
4. Raleigh, C., Kishi, R. & Linke, A. Political instability patterns are obscured by conflict dataset scope conditions, sources, and coding choices. Humanit Soc Sci Commun 10, 74 (2023). [https://doi.org/10.1057/s41599-023-01559-4](https://doi.org/10.1057/s41599-023-01559-4)
5. Rieffel, L. (2019, December 6). Peace and war in Myanmar. Brookings. [https://www.brookings.edu/articles/peace-and-war-in-myanmar/](https://www.brookings.edu/articles/peace-and-war-in-myanmar/)
6. Sullivan, D. P. (2021, October 21). Dire consequences: Addressing the humanitarian fallout from myanmar’s coup. Refugees International; Refugees International. [https://www.refugeesinternational.org/reports-briefs/dire-consequences-addressing-the-humanitarian-fallout-from-myanmars-coup/](https://www.refugeesinternational.org/reports-briefs/dire-consequences-addressing-the-humanitarian-fallout-from-myanmars-coup/)
7. UNDP (Ed.). (2024). Breaking the gridlock: Reimagining cooperation in a polarized world. United Nations Development Programme (UNDP).

## Annex A: Full Quarterly STKDE Plots for Jan 2021- Sep 2024

```{r}
for (i in 1: length(quarter_numbers)) {
  plot(st_kde, quarter_numbers[i], override.par=FALSE, fix.range=TRUE, main=paste("Spatial-temporal KDE for", quarters[i]))
}
```


--- OLD ---

## TH1.5 First Order SPPA - KDE

Kernel density estimation (KDE) serves to compute the *intensity* of a point distribution. It has two general steps: first to compute the point intensity, followed by spatial interpolation using a kernel function. Using KDE, we can determine the general region of Myanmar with the highest incidence of armed conflict.

### TH1.5.1 Overall Fixed-Bandwidth KDE

```{r}
#| echo: false
#| eval: false
# overall_fixed_kde <- density(acled_mya_ppp.km, sigma=bw.diggle, edge=TRUE, kernel="gaussian")
# plot(overall_fixed_kde, main="Overall fixed bandwidth KDE")
```
### TH1.5.2 Overall adaptive-bandwidth KDE
```{r}
#| echo: false
#| eval: false
# overall_adaptive_kde <- adaptive.density(acled_mya_ppp.km, method="kernel")
# plot(overall_adaptive_kde, main="Overall adaptive bandwidth KDE")
```

### TH1.5.3 Quarterly fixed-bandwidth KDE

```{r}
#| echo: false
#| eval: false
# Create a list to store KDE results and track quarters for each quarter
fixed_kde <- list()
for (quarter in selected_quarters) {
  print(quarter)
  ppp_item <- acled_ppp_list[[as.character(quarter)]]
  ppp_item <- rescale.ppp(ppp_item, 1000, "km")
  ppp_item
  # Compute KDE and append to list
  each_kde <- density(ppp_item, sigma=bw.diggle, edge=TRUE, kernel="gaussian")
  fixed_kde[[as.character(quarter)]] <- each_kde
}
for (quarter in selected_quarters) {
  plot(fixed_kde[[as.character(quarter)]], main = paste("Fixed bandwidth KDE for ", quarter))
}

```
### TH1.5.4 Quarterly adaptive-bandwidth KDE

```{r}
#| echo: false
#| eval: false
# Create a list to store adaptive KDE results and track quarters for each quarter
adaptive_kde <- list()
for (quarter in selected_quarters) {
  print(quarter)
  ppp_item <- acled_ppp_list[[as.character(quarter)]]
  ppp_item <- rescale.ppp(ppp_item, 1000, "km")
  ppp_item
  # Compute KDE and append to list
  each_kde <- adaptive.density(ppp_item, method="kernel")
  adaptive_kde[[as.character(quarter)]] <- each_kde
}
```
```{r}
#| echo: false
#| eval: false
for (quarter in selected_quarters) {
  plot(adaptive_kde[[as.character(quarter)]], main = paste("Adaptive bandwidth KDE for", quarter))
}
```

## TH1.6 First Order STPPA: Spatio-temporal KDE

```{r}
#| echo: false
#| eval: false
acled_mya_sf_quarters <- acled_mya_sf %>% select(Quarter_num)
acled_mya_quarters_ppp <- as.ppp(acled_mya_sf_quarters)
acled_mya_quarters_ppp <- acled_mya_quarters_ppp[mmr_admin1_owin]
plot(acled_mya_quarters_ppp)

st_kde <- spattemp.density(acled_mya_quarters_ppp)
summary(st_kde)
```
```{r}
#| echo: false
#| eval: false
for (quarter in quarters) {
  plot(st_kde, override.par=FALSE, fix.range=TRUE, main=paste("Spatial-temporal KDE for", quarter))
}
```

## TH1.7 First-order SPPA: Nearest Neighbour Analysis

To determine whether the plotted armed conflict events are clustered, dispersed or random, we can use the Clark-Evans test. Since tensions between Myanmar's different ethnic groups already existed before the 2021 coup, it would be a good idea to run the test on the subsets of data both before and after the coup.

```{r}
#| echo: false
#| eval: false
ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character("Before")]]
print("Clark Evans Test: Before Coup")
clarkevans.test(ppp_item, correction = "none", clipregion = "mmr_admin1_owin", alternative = c("clustered"), nsim = 9)
```
```{r}
#| echo: false
#| eval: false
ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character("After")]]
print("Clark Evans Test: After Coup")
clarkevans.test(ppp_item, correction = "none", clipregion = "mmr_admin1_owin", alternative = c("clustered"), nsim = 9)
```

## TH1.7 Second-order SPPA

Second order SPPA deals with variations in observations due to the way they interact with one another. The methods used for second order SPPA are the F-, G-, K- and L-functions. In this section, we will perform second-order SPPA on the conflict dataset, applying the F-, G-, K- and L-functions on subsets of the data before and after the 2021 coup.

### TH1.7.1 F-function

```{r}
#| echo: false
#| eval: false
for (quarter in selected_quarters) {
  print(quarter)
  ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character(quarter)]]
  F_function <- Fest(ppp_item)
  plot(F_function, main = paste("F function for", quarter))
  
  # Perform complete spatial randomness test
  csr <- envelope(ppp_item, Fest, nsim=9)
  plot(csr, main = paste("Complete spatial randomness test for F function for", quarter))
}
```

### TH1.7.2 G-function

```{r}
#| echo: false
#| eval: false
for (quarter in selected_quarters) {
  print(paste(coupStatus, " coup"))
  ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character(quarter)]]
  G_function <- Gest(ppp_item, correction = "border")
  plot(G_function, xlim=c(0, 500), main = paste("G function for", quarter))
  
  # Perform complete spatial randomness test
  csr <- envelope(ppp_item, Gest, nsim=9)
  plot(csr, main = paste("Complete spatial randomness test for G function for", quarter))
}
```

### TH1.7.3 K-function

```{r}
#| echo: false
#| eval: false
for (quarter in selected_quarters) {
  print(paste(coupStatus, " coup"))
  ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character(quarter)]]
  K_function <- Kest(ppp_item, correction = "Ripley")
  plot(K_function, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)", main = paste("K function for", quarter))
  
  # Perform complete spatial randomness test
  csr <- envelope(ppp_item, Kest, nsim=9, rank=1, glocal=TRUE)
  plot(csr, . - r ~ r, xlab="d", ylab="K(d)-r", main = paste("Complete spatial randomness test for K function for", quarter))
}
```

### TH1.7.4 L-function

```{r}
#| echo: false
#| eval: false
for (quarter in selected_quarters) {
  print(paste(coupStatus," coup"))
  ppp_item <- acled_ppp_beforeAfterCoup_list[[as.character(quarter)]]
  L_function <- Lest(ppp_item, correction = "Ripley")
  plot(L_function, . -r ~ r, ylab= "L(d)-r", xlab = "d(m)", main = paste("L function for", quarter))
  
  # Perform complete spatial randomness test
  csr <- envelope(ppp_item, Kest, nsim=9, rank=1, glocal=TRUE)
  plot(csr, . - r ~ r, xlab="d", ylab="L(d)-r", main = paste("Complete spatial randomness test for L function for", quarter))
}
```

## Annex A: Spatial-temporal distribution of armed conflict occurrences in Myanmar between 2019 and 2023

```{r}
#| echo: false
#| eval: false
tm_shape(mmr_admin1) + tm_polygons() + tm_shape(acled_mya_sf) + tm_dots(size = 0.1) + tm_facets(by="Quarter", free.coords=FALSE, drop.units=TRUE, ncol=3, nrow=1)
```

## Annex B: All quarterly fixed-bandwidth KDE plots

```{r}
#| echo: false
#| eval: false
for (quarter in quarters) {
  plot(fixed_kde[[as.character(quarter)]], main = paste("Fixed bandwidth KDE for ", quarter))
}
```

## Annex C: All quarterly adaptive-bandwidth KDE plots

```{r}
#| echo: false
#| eval: false
for (quarter in quarters) {
  plot(adaptive_kde[[as.character(quarter)]], main = paste("Adaptive bandwidth KDE for ", quarter))
}
```