{
  "hash": "eae3e46ad9b3a465edcbfc750bd9bb81",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TH2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level\"\nsubtitle: \"Take Home Exercise 2\"\nauthor: \"Kendrick Teo\"\ndate: \"2024-09-23\"\ndate-modified: \"last-modified\"\n\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n\n\n## TH2.1 Setting the Scene\n\nDrug abuse brings with it significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. The UNODC has reported an increase in the number of people using illicit drugs to 292 million people worldwide in the decade leading up to 2022. Of these, 228 million people consumed cannabis, 60 million people consumed opiods, 30 million used amphetamines, 23 million used cocaine and 20 million took ecstasy. Further, they found an **increase in overdose deaths following the emergence of nitazenes**, which is a group of synthetic opioids potentially more dangerous than fentanyl – in several high-income countries. (World Drug Day Report Highlights Spike in Drug Use, Increased Trafficking | UN News, 2024).\n\nThe aim of today's study is to discover:\n\n- If the key indicators of drug abuse and trafficking in Thailand are independent from space,\n- If the indicators of drug abuse and trafficking are indeed spatially-dependent, and if so, where the clusters, outliers and hotspots are located.\n\n## TH2.2 The Drug Problem in Thailand\n\n**[Thailand](https://en.wikipedia.org/wiki/Thailand)** (2024 GDP per capita - PPP: $23,401; Gini coefficient: 35.1 - <span style=\"color:orange;\">medium</span>; HDI: 0.083 - <span style=\"color:darkgreen;\">very high</span>) (International Monetary Fund, 2024) (World Bank, n.d.) (United Nations Development Programme, 2024) is located in close proximity to the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)), which comprises the northern part of the country along with northern Myanmar and Laos. In 2021, its drug trafficking situation remained critical, with 337,186 drug cases in total. While seizures of ketamine decreased between 2020 and 2021, seizures of methamphetamine, ice and heroin increased in the same period, with heroin seeing the biggest increase from 1873kg in 2020 to 4520kg in 2021 (Kanato et al., 2022). Considering that the *COVID-19 pandemic* - which caused a global economic depression among other socio-economic effects - occurred around this time, it can be theorised that those who encountered economic hardship as a result of the pandemic might turn to drug trafficking to support themselves and their families.\n\nThe maximum penalty for drug trafficking in Thailand, as is neighbouring Laos, Malaysia and Singapore, is [death](https://en.wikipedia.org/wiki/Capital_punishment_for_drug_trafficking) (Thailand, n.d.). Despite this, smugglers have innovated on new routes, through the north and northern borders of the country, and even go so far as to hide shipments in cargo vessels bound for the likes of Singapore, New Zealand, Australia and South Korea. 575 smuggling cases by sea occured in 2021, in which 4554kg of heroin, 2.4 times more than the previous year, were seized (Kanato et al., 2022).\n\nDrug *use* in the country is as problematic. In 2018, 39% of Thais aged between 15 and 24 were involved in ilicit drugs. Of youth aged between 15 and 19, there are 300000 who need treatment, and a significant majority attend vocational schools (as opposed to grade schools). Kongjareon et al. (2022) found in a study of 638 students in four vocational schools, that 11.3% reported poly-drug use. Among LGBT students this figure was 20.2%, and among hetrosexual students 9.8%. Factors contributing to the former's use of drugs include, among other things, counselling needs, intoxicated sex and GPA.\n\n## TH2.3 Importing data and R packages\n\nThe `R` packages we will use today are:\n\n-   `sf`\n-   `tmap`\n-   `spatstat`\n-   `spdep` for measures of spatial autocorrelation, and\n-   `sparr`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, spdep, sparr, tmap, tidyverse, gridExtra)\n```\n:::\n\n\n\n\nWe will be examining a dataset of drug offences in Thailand between 2017 and 2022 retrieved from Kaggle, superimposed against the provincial boundaries of the country.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand <- st_read(dsn=\"data/geospatial\", layer=\"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/kendricktty/Gits/smu_cs/is415-site/TakeHome/TakeHome2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nthailand\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3    1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4    1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n7    5.693342 0.54578838                 Lop Buri          ลพบุรี       TH16\n8    1.778326 0.06872655                Sing Buri         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 Chai Nat         ชัยนาท       TH18\n10   4.766446 0.29208711                 Saraburi         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn validTo                       geometry\n1          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.6139 13...\n2          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.7306 13...\n3          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.3415 14...\n4          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.8916 14...\n5          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.5131 14...\n6          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.3332 14...\n7          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((101.3453 15...\n8          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.3691 15...\n9          TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.1199 15...\n10         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((101.3994 15...\n```\n\n\n:::\n\n```{.r .cell-code}\nthailand_drug <- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\") %>% select(fiscal_year, types_of_drug_offenses, no_cases, province_en)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nthailand_drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,392 × 4\n   fiscal_year types_of_drug_offenses no_cases province_en             \n         <dbl> <chr>                     <dbl> <chr>                   \n 1        2017 drug_use_cases            11871 Bangkok                 \n 2        2017 drug_use_cases              200 Chai Nat                \n 3        2017 drug_use_cases              553 Nonthaburi              \n 4        2017 drug_use_cases              450 Pathum Thani            \n 5        2017 drug_use_cases              378 Phra Nakhon Si Ayutthaya\n 6        2017 drug_use_cases              727 Loburi                  \n 7        2017 drug_use_cases              820 Samut Prakan            \n 8        2017 drug_use_cases               69 Saraburi                \n 9        2017 drug_use_cases              127 Sing Buri               \n10        2017 drug_use_cases              208 Ang Thong               \n# ℹ 7,382 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## TH2.4 Exploratory Data Analysis\n\nThe code chunk below prints the total number of each unique type of drug offence cases.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_drug_analysis <- thailand_drug %>% \n  group_by(types_of_drug_offenses) %>% \n  summarise(total_cases = sum(no_cases)) %>% ungroup()\nthailand_drug_analysis\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   types_of_drug_offenses                                 total_cases\n   <chr>                                                        <dbl>\n 1 conspiracy_cases                                               920\n 2 drug_use_cases                                              915529\n 3 export_cases                                                    84\n 4 import_cases                                                   860\n 5 possession_cases                                            538893\n 6 possession_with_intent_to_distribute_cases                  341283\n 7 production_cases                                             56892\n 8 suspects_in_conspiracy_cases                                  2332\n 9 suspects_in_drug_use_cases                                  930768\n10 suspects_in_export_cases                                       102\n11 suspects_in_import_cases                                      1066\n12 suspects_in_possession_cases                                566999\n13 suspects_in_possession_with_intent_to_distribute_cases      386946\n14 suspects_in_production_cases                                 66247\n15 suspects_in_trafficking_cases                                79997\n16 trafficking_cases                                            68379\n```\n\n\n:::\n:::\n\n\n\nThere are a total of 8 different types of cases, with another 8 unique values dedicated to suspected instances of cases.\n\nWe are particularly interested in drug use, possession and trafficking cases, so we will now attempt to plot the changes in the number of each type of case between 2017 and 2022. This analysis will help us select study periods to analyse later.\n\n### TH2.4.1 Plotting changes in drug trafficking cases by time\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_drug_trafficking <- thailand_drug %>% filter(types_of_drug_offenses %in% c(\"trafficking_cases\", \"suspects_in_trafficking_cases\", \"possession_with_intent_to_distribute_cases\", \"suspects_in_possession_with_intent_to_distribute_cases\")) %>%\n  group_by(fiscal_year) %>%\n  summarise(total_cases = sum(no_cases[types_of_drug_offenses == \"trafficking_cases\"]),\n    total_suspect_cases = sum(no_cases[types_of_drug_offenses == \"suspects_in_trafficking_cases\"]),\n    total_posession_intent_cases = sum(no_cases[types_of_drug_offenses == \"possession_with_intent_to_distribute_cases\"]),\n    total_suspect_posession_intent_cases = sum(no_cases[types_of_drug_offenses == \"suspects_in_possession_with_intent_to_distribute_cases\"])) %>%\n  ungroup()\nthailand_drug_trafficking\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  fiscal_year total_cases total_suspect_cases total_posession_intent_cases\n        <dbl>       <dbl>               <dbl>                        <dbl>\n1        2017       13089               15603                        55644\n2        2018       12034               14630                        64205\n3        2019       11366               13498                        63194\n4        2020       12248               13918                        67014\n5        2021       10847               12395                        68681\n6        2022        8795                9953                        22545\n# ℹ 1 more variable: total_suspect_posession_intent_cases <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(data = thailand_drug_trafficking, aes(x = fiscal_year)) +     \n  geom_line(aes(y = total_cases, color = \"trafficking_cases\"), size = 1) + \n  geom_point(aes(y = total_cases, color = \"trafficking_cases\"), size = 2) +\n  geom_line(aes(y = total_suspect_cases, color = \"suspects_in_trafficking_cases\"), size = 1) + \n  geom_point(aes(y = total_suspect_cases, color = \"suspects_in_trafficking_cases\"), size = 2) +\n  labs(title = \"Trafficking Cases and Suspects\",\n       x = \"Year\",\n       y = \"Number of cases\") +\n  scale_color_manual(values = c(\"trafficking_cases\" = \"purple3\", \"suspects_in_trafficking_cases\" = \"plum\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\", \n        legend.justification = \"right\") +\n  guides(color = guide_legend(title = \"Legend\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = thailand_drug_trafficking, aes(x = fiscal_year)) +\n  geom_line(aes(y = total_posession_intent_cases, color = \"possession_with_intent_to_distribute_cases\"), size = 1) + \n  geom_point(aes(y = total_posession_intent_cases, color = \"possession_with_intent_to_distribute_cases\"), size = 2) +\n  geom_line(aes(y = total_suspect_posession_intent_cases, color = \"suspects_in_possession_with_intent_to_distribute_cases\"), size = 1) + \n  geom_point(aes(y = total_suspect_posession_intent_cases, color = \"suspects_in_possession_with_intent_to_distribute_cases\"), size = 2) +\n  labs(title = \"Possession with Intent to Distribute Cases and Suspects\",\n       x = \"Year\",\n       y = \"Number of cases\") +\n  scale_color_manual(values = c(\"possession_with_intent_to_distribute_cases\" = \"black\", \n                                \"suspects_in_possession_with_intent_to_distribute_cases\" = \"gray\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\", \n        legend.justification = \"right\") +\n  guides(color = guide_legend(title = \"Legend\"))\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# grid.arrange(plot1, plot2, ncol = 2)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nThe number of trafficking cases generally trended downwards between 2017 and 2022, though there was a momentary increase between 2019 and 2020. Meanwhile the number of posession cases with intent to distribute rose steadily until 2021, before plunging in 2022.\n\n### TH2.4.2 Plotting changes in drug use cases by time\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_drug_trafficking <- thailand_drug %>% filter(types_of_drug_offenses %in% c(\"drug_use_cases\", \"suspects_in_drug_use_cases\", \"possession_cases\", \"suspects_in_possession_cases\")) %>%\n  group_by(fiscal_year) %>%\n  summarise(total_use_cases = sum(no_cases[types_of_drug_offenses == \"drug_use_cases\"]),\n    total_suspect_use_cases = sum(no_cases[types_of_drug_offenses == \"suspects_in_drug_use_cases\"]),\n    total_posession_cases = sum(no_cases[types_of_drug_offenses == \"possession_cases\"]),\n    total_suspect_posession_cases = sum(no_cases[types_of_drug_offenses == \"suspects_in_possession_cases\"])) %>%\n  ungroup()\nthailand_drug_trafficking\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  fiscal_year total_use_cases total_suspect_use_cases total_posession_cases\n        <dbl>           <dbl>                   <dbl>                 <dbl>\n1        2017           91444                   93895                 90845\n2        2018          146761                  150049                100941\n3        2019          177078                  179823                104365\n4        2020          141570                  141761                 87997\n5        2021          231406                  235803                 93976\n6        2022          127270                  129437                 60769\n# ℹ 1 more variable: total_suspect_posession_cases <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(data = thailand_drug_trafficking, aes(x = fiscal_year)) +     \n  # geom_bar(stat = \"identity\", fill = \"red4\") +\n  geom_line(aes(x = fiscal_year, y = total_use_cases, color = \"drug_use\"), size = 1) + geom_point(aes(x = fiscal_year, y = total_use_cases, color = \"drug_use\"), size = 2) +\n  geom_line(aes(x = fiscal_year, y = total_suspect_use_cases, color = \"suspects_in_drug_use_cases\"), size = 1) + geom_point(aes(x = fiscal_year, y = total_suspect_use_cases, color = \"suspects_in_drug_use_cases\"), size = 2) +\n  geom_line(aes(x = fiscal_year, y = total_posession_cases, color = \"possession_cases\"), size = 1) + geom_point(aes(x = fiscal_year, y = total_posession_cases, color = \"possession_cases\"), size = 2) +\n  geom_line(aes(x = fiscal_year, y = total_suspect_posession_cases, color = \"suspects_in_possession_cases\"), size = 1) + geom_point(aes(x = fiscal_year, y = total_suspect_posession_cases, color = \"suspects_in_possession_cases\"), size = 2) +\n    labs(title = \"Drug use and suspected cases by year\",\n         x = \"Year\",\n         y = \"Number of cases\") +\n    scale_color_manual(values = c(\"drug_use\" = \"skyblue1\", \"suspects_in_drug_use_cases\" = \"green3\", \"possession_cases\" = \"red2\", \"suspects_in_possession_cases\" = \"yellow3\")) +\n    theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(title = \"Legend\"))\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nThere was a spike in the number of drug use cases in 2021 in an otherwise variable set of data. Meanwhile, drug possession cases generally declined after 2019, though there was a slight increase in 2021.\n\nFrom both analysis steps, it makes sense to select the drug use cases trafficking cases in 2021 for further analysis. The year 2021 coincided with a rise in the country's unemployment rate to 1.2% from 0.7% two years prior (World Bank Open Data, n.d.), as the Thai economy was still recovering from the COVID-19 pandemic. Unemployment increases susceptibility to, among other negative effects, drug use.\n\n## TH2.4.3 Creating filtered table for 2021 observations\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_2021_drug <- thailand_drug %>%\n  filter(fiscal_year == \"2021\") %>%\n  filter(types_of_drug_offenses %in% c(\"drug_use_cases\", \"trafficking_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(total_use_cases = sum(no_cases[types_of_drug_offenses == \"drug_use_cases\"]),\n            total_trafficking_cases = sum(no_cases[types_of_drug_offenses == \"trafficking_cases\"])) %>%\n  ungroup()\n\nthailand_2021_drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 77 × 3\n   province_en   total_use_cases total_trafficking_cases\n   <chr>                   <dbl>                   <dbl>\n 1 Amnat Charoen            3012                     164\n 2 Ang Thong                 755                      51\n 3 Bangkok                  9625                     250\n 4 Buri Ram                 5110                     399\n 5 Chachoengsao             4111                     197\n 6 Chai Nat                  763                      97\n 7 Chaiyaphum               4620                     181\n 8 Chanthaburi              2200                      31\n 9 Chiang Mai               8623                     640\n10 Chiang Rai               5634                     475\n# ℹ 67 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nthailand_2021 <- left_join(thailand, thailand_2021_drug, by = c(\"ADM1_EN\" = \"province_en\"))\nthailand_2021\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3    1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4    1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n7    5.693342 0.54578838                 Lop Buri          ลพบุรี       TH16\n8    1.778326 0.06872655                Sing Buri         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 Chai Nat         ชัยนาท       TH18\n10   4.766446 0.29208711                 Saraburi         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn validTo total_use_cases\n1          TH 2019-02-18 2022-01-22    <NA>            9625\n2          TH 2019-02-18 2022-01-22    <NA>            2515\n3          TH 2019-02-18 2022-01-22    <NA>            3202\n4          TH 2019-02-18 2022-01-22    <NA>            1747\n5          TH 2019-02-18 2022-01-22    <NA>            1766\n6          TH 2019-02-18 2022-01-22    <NA>             755\n7          TH 2019-02-18 2022-01-22    <NA>              NA\n8          TH 2019-02-18 2022-01-22    <NA>             683\n9          TH 2019-02-18 2022-01-22    <NA>             763\n10         TH 2019-02-18 2022-01-22    <NA>            1106\n   total_trafficking_cases                       geometry\n1                      250 MULTIPOLYGON (((100.6139 13...\n2                      159 MULTIPOLYGON (((100.7306 13...\n3                       60 MULTIPOLYGON (((100.3415 14...\n4                      106 MULTIPOLYGON (((100.8916 14...\n5                      112 MULTIPOLYGON (((100.5131 14...\n6                       51 MULTIPOLYGON (((100.3332 14...\n7                       NA MULTIPOLYGON (((101.3453 15...\n8                       40 MULTIPOLYGON (((100.3691 15...\n9                       97 MULTIPOLYGON (((100.1199 15...\n10                      69 MULTIPOLYGON (((101.3994 15...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nuse_map <- tm_shape(thailand_2021) + tm_fill(\"total_use_cases\", n = 8, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(main.title = \"Drug use across Thailand (quantile)\")\nuse_map_equal <- tm_shape(thailand_2021) + tm_fill(\"total_use_cases\", n = 6, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(main.title = \"Drug use across Thailand (equal)\")\ntmap_arrange(use_map, use_map_equal, asp = 1, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nConsidering only confirmed cases of use and trafficking (and ignoring *suspected* ones), the provinces with the highest number of drug use cases appear clustered to the northeast, around Sakon Nakhon, and north, around Chiang Mai and Chiang Rai, with pockets of high use around Pattaya and the capital Bangkok near the Gulf of Thailand, and the southern provinces including Songkhla province on the border with Kedah, Malaysia. Surprisingly, provinces such as Kanchanaburi and Sing Buri see relatively muted drug use.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrafficking_map <- tm_shape(thailand_2021) + tm_fill(\"total_trafficking_cases\", n = 8, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(main.title = \"Drug trafficking across Thailand (quantile)\")\ntrafficking_map_equal <- tm_shape(thailand_2021) + tm_fill(\"total_trafficking_cases\", n = 6, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(main.title = \"Drug trafficking across Thailand (equal)\")\ntmap_arrange(trafficking_map, trafficking_map_equal, asp = 1, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\nThe same general region also sees the highest concentration of drug *trafficking* cases throughout the country, with the eastern province of Ubon Ratchatani seeing the largest number of all.\n\nData for two provinces is missing, but thankfully, the Moran's I and Geary's C functions contain provisions for handling missing data.\n\nWe will now proceed to rigourously verify these observations using global and local spatial autocorrelation techniques, such as global and local Moran's I, Geary's C and G-statistics. In particular, we want to verify if the indicators of drug abuse are indeed spatially dependent, i.e. provinces that see less drug use are clustered with one another and vice-versa, and if so, whether the high-use areas identified in the choropleth maps above are indeed hot spots.\n\n## TH2.5 Deriving Global Measures of Spatial Autocorrelation\n\nTobler's (1970) first law of geography states that everything is related to everything else, but near things are more related than distant things. Spatial autocorrelation seeks to determine the extent of Tobler's first law on a variable or measurement - in our case, the number of drug use and drug trafficking cases. As the illustration below (Khant, 2024) (Moraga, 2023) shows, positive spatial autocorrelation is when adjacent observations have similar data values. In contrast, negative spatial autocorrelation is when adjacent observations have contrasting values, and when the data values appear randomly distributed, no spatial autocorrelation occurs.\n\n![An illustration on the methods of spatial autocorrelation. (Moraga, 2023)](moraga.png)\n\nWe will first focus on the global measures of spatial autocorrelation: Moran's I and Geary's C. While both seek to determine if the measured variables (in this case, our drug use and drug trafficking statistics) are clustered, dispersed or random, the former looks at the study area as a whole, and the latter quantifies how different each subdivision (province) is different from its immediate neighbours.\n\n### TH2.5.1 Data Preparation - Spatial Weights\n\nBefore computing any global spatial autocorrelation statistics, we first need to construct the spatial weights of the study area. The first step in doing so will be to compute the queen contiguity spatial weights. This means we will consider all neighbours for each province that share an edge and vertex, i.e. are horizontally, vertically and diagonally adjacent.\n\nWe will create 2 row-standardised spatial weights matrices *for confirmed cases only* - one for our drug use statistics and another for our drug trafficking statistics. Row-standardisation will take the inverse of the number of neighbours each province has, as derived from our vanilla queen contiguity spatial weights matrix.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_2021_use <- thailand_2021 %>% select(1:3, 17)\nthailand_2021_trafficking <- thailand_2021 %>% select(1:3, 18)\nwm_q_use <- poly2nb(thailand_2021_use, queen=TRUE)\nwm_q_tr <- poly2nb(thailand_2021_trafficking, queen=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"Weights matrix for drug use cases\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Weights matrix for drug use cases\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(wm_q_use)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Weights matrix for drug trafficking cases\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Weights matrix for drug trafficking cases\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(wm_q_tr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q_use <- nb2listw(wm_q_use, style = \"W\", zero.policy = TRUE)\nrswm_q_tr <- nb2listw(wm_q_tr, style = \"W\", zero.policy = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q_use\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n```\n\n\n:::\n\n```{.r .cell-code}\nrswm_q_tr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n```\n\n\n:::\n:::\n\n\n\nWe will also define our null and alternative hypotheses as such:\n\n- **Null Hypotheses $H_0_$: the tests indicate no spatial autocorrelation:\n  - For *Moran's I*: $H_0_: I = E[I] = 0$, and;\n  - For *Geary's C*:\n- **Alternative Hypotheses\n\n### TH2.5.2 Moran's I\n\nWith our matrices constructed, we can calculate our global spatial correlation statistics. Moran’s I describes how features differ from the values in the study area as a whole. It approaches 1 when similar values are clustered, and approaches -1 when dissimilar values tend to cluster.\n\nThe code chunk below computes Moran's I on our *drug use* dataset, subsequently performing a Monte Carlo test and plotting the result in a histogram. We can use the histogram to visualise the permutation results and compare them to the expected value under null hypothesis.\n\n#### TH2.5.2.1 Moran's I on `drug_use` statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(thailand_2021$total_use_cases, listw=rswm_q_use, zero.policy = TRUE, na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  thailand_2021$total_use_cases  \nweights: rswm_q_use \nomitted: 7, 27 \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.8411, p-value = 0.002248\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.208097782      -0.013698630       0.006094258 \n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1234)\nbperm_use <- moran.mc(thailand_2021$total_use_cases, \n                listw=rswm_q_use, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm_use\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  thailand_2021$total_use_cases \nweights: rswm_q_use \nomitted: 7, 27 \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2081, observed rank = 997, p-value = 0.003\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm_use$res, main = \"Global Moran's I Simulation Results for drug_use\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\") \nabline(v = bperm_use$statistic, col = \"green4\")\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nFrom the output above:\n\n- The Moran's I statistic is approximately `0.21`, which is significantly higher than the expected value of `-0.014`. This is a significant indicator of positive spatial autocorrelation, but only to a moderate degree.\n- With a standard deviation of `2.84` and p-value of `0.00224 < 0.05` at a 95% confidence level, the test result is statistically significant. We can reject the null hypothesis of a lack of spatial autocorrelation.\n- After 1000 permutations, we get a similar Moran's I observation of `0.2081`, with a p-value of `0.003`. Therefore, our result is stable and statistically significant.\n\nThis shows that provinces with high drug use in Thailand can, to a limited extent, be near one another.\n\n#### TH2.5.2.2 Moran's I on `drug_trafficking` statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(thailand_2021$total_trafficking_cases, listw=rswm_q_tr, zero.policy = TRUE, na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  thailand_2021$total_trafficking_cases  \nweights: rswm_q_tr \nomitted: 7, 27 \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 3.2362, p-value = 0.0006056\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.219471787      -0.013698630       0.005191187 \n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1234)\nbperm_tr <- moran.mc(thailand_2021$total_trafficking_cases, \n                listw=rswm_q_tr, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm_tr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  thailand_2021$total_trafficking_cases \nweights: rswm_q_tr \nomitted: 7, 27 \nnumber of simulations + 1: 1000 \n\nstatistic = 0.21947, observed rank = 992, p-value = 0.008\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm_use$res, main = \"Global Moran's I Simulation Results for drug_trafficking\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\") \nabline(v = bperm_tr$statistic, col = \"purple4\")\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nThe output for our `drug_trafficking` statistics is similar to that for our `drug_use` statistics, and can be interpreted as follows:\n\n- The Moran's I statistic is approximately `0.22`, which is significantly higher than the expected value of `-0.014`. This value is close to that obtained from our `drug_use` statistics, which indicates that both categories of drug crimes are similarly and moderately clustered.\n- With a standard deviation of `3.24` and p-value of `0.006 < 0.05` at a 95% confidence level, the test result is statistically significant. We can reject the null hypothesis of a lack of spatial autocorrelation.\n- After 1000 permutations, we get a similar Moran's I observation of `0.21947`, with a p-value of `0.008`. Therefore, our result is stable and statistically significant.\n\nLike drug use, using Moran's I show that provinces with high drug trafficking in Thailand can, to a limited extent, be near one another.\n\n## TH2.6 Geary's C\n\nGeary's C is another measure of global spatial autocorrelation that describes how features differ from their immediate neighbours. When `C > 1`, the points are dispersed, and while `C < 1`, the points are clustered. A `C` value of `1` indicates observations are randomly arranged in space. Geary’s C approaches `0` when similar values are clustered, and approaches `3` when dissimilar values are clustered. Geary’s C is inversely proportional to Moran’s I, so higher Cs correspond to lower Is.\n\nJust as before, we will now perform Geary's C on both our `drug_use` and `drug_trafficking` statistics.\n\n### TH2.6.1 Geary's C on `drug_use` statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(thailand_2021$total_use_cases, listw=rswm_q_use, zero.policy = TRUE, na.action = na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  thailand_2021$total_use_cases \nweights: rswm_q_use \nomitted: 7, 27 \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 1.7539, p-value = 0.03973\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.844116310       1.000000000       0.007899682 \n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1234)\nbperm_use <- geary.mc(thailand_2021$total_use_cases, \n                listw=rswm_q_use, \n                nsim=999,\n                zero.policy = TRUE,\n                na.action = na.omit)\nbperm_use\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  thailand_2021$total_use_cases \nweights: rswm_q_use \nomitted: 7, 27 \nnumber of simulations + 1: 1000 \n\nstatistic = 0.84412, observed rank = 72, p-value = 0.072\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm_use$res, main = \"Geary's C Simulation Results for drug_use\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\") \nabline(v = bperm_use$statistic, col = \"green4\")\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nFrom the output above:\n\n- The Geary's C statistic is approximately `0.84`, which is lower than the expected value of `1.0`. Just as a high Moran's I indicates positive spatial correlation, our Geary's C statistic, which is less than `1`, indicates likewise. Similarly to the conclusion of our Moran's I investigation, the Geary's C statistic only indicates moderate positive spatial correlation.\n- With a standard deviation of `3.24 and p-value of `0.04 < 0.05`, the test result is statistically significant. If we were to only run the test once, we should be able to reject the null hypothesis of a lack of spatial autocorrelation.\n- However, while running 1000 permutations yielded a similar Geary's C observation of `0.84412`, this time, our p-value of `0.072` is *greater* than our threshold of `0.05` at the 95% confidence level. Had we only used Geary's C, we would not have strong statistical evidence to reject our null hypothesis.\n\nHence, the Geary's C statistic on drug use cases in 2021 yielded inconclusive results.\n\n### TH2.6.2 Geary's C on `drug_trafficking` statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(thailand_2021$total_trafficking_cases, listw=rswm_q_tr, zero.policy = TRUE, na.action = na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  thailand_2021$total_trafficking_cases \nweights: rswm_q_tr \nomitted: 7, 27 \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 2.277, p-value = 0.01139\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.74184058        1.00000000        0.01285472 \n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1234)\nbperm_tr <- geary.mc(thailand_2021$total_trafficking_cases, \n                listw=rswm_q_tr, \n                nsim=999, zero.policy = TRUE, na.action = na.omit)\nbperm_tr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  thailand_2021$total_trafficking_cases \nweights: rswm_q_tr \nomitted: 7, 27 \nnumber of simulations + 1: 1000 \n\nstatistic = 0.74184, observed rank = 43, p-value = 0.043\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm_use$res, main = \"Global Geary's C Simulation Results for drug_trafficking\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\") \nabline(v = bperm_tr$statistic, col = \"purple4\")\n```\n\n::: {.cell-output-display}\n![](take-home-2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nWhen Geary's C is run on the `drug_trafficking` statistics:\n\n- The result yielded is approximately `0.74`, which is lower than the expected value of `1.0`. It is also lower than the Geary's C for the drug use data, which indicates that the clustering of drug trafficking hotspots is stronger than that for drug use.\n- With a standard deviation of `2.28` and p-value of `0.01 < 0.05` for a 95% confidence level, the test result is statistically significant. If we were to only run the test once, we should be able to reject the null hypothesis of a lack of spatial autocorrelation.\n- Now, running 1000 permutations yielded a similar Geary's C observation of `0.74184` and a p-value of `0.043` is less than our threshold of `0.05` at the 95% confidence level. Even though the p-value is uncomfortably close to the threshold, we can still conclude that our derived Geary's C for our drug trafficking data is statistically significant.\n\nHence, the Geary's C measure on drug trafficking cases in 2021 indicates mild positive spatial autocorrelation, albeit stronger than that observed on our drug use statistics.\n\n## TH2.7 Deriving Local Measures of Spatial Autocorrelation\n\nBoth Global Moran's I and Geary's C only return a surface observation on how Thailand's drug crime is distributed by province. To identify where the clusters are located, we need to use local indicators of spatial association (LISA), which indicate the extent of spatial clustering around each observation (Anselin, 1995) (Khant, 2024). \n\nAn example of a LISA is local Moran's I, which is essentially Moran's I calculated for each geographical subdivision, in this case the provinces of Thailand. However, with these localised measures, we are able to visualise our findings on a choropleth map, and move on to detect hot and cold spot areas.\n\nAs before, we will derive the local Moran's I statistics for both our drug trafficking and drug use data.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## References\n\n1. Anselin, L. (1995). Local indicators of spatial association—LISA. Geographical Analysis, 27(2), 93–115. https://doi.org/10.1111/j.1538-4632.1995.tb00338.x\n2. International Monetary Fund. (2024, April 16). World Economic Outlook Database, April 2024 Edition: Thailand. https://www.imf.org/en/Publications/WEO/weo-database/2024/April\n3. Khant, M. N. (2024, February 10). Take-Home Exercise 02: Spatio-Temporal Analysis of Dengue Fever Outbreak in Tainan City, Taiwan. https://is415-geospatial-with-khant.netlify.app/take-home_ex/take-home_ex02/take-home_ex02\n4. Kongjareon, Y., Samoh, N., Peerawaranun, P. et al. Pride-based violence, intoxicated sex and poly-drug use: a vocational school-based study of heterosexual and LGBT students in Bangkok. BMC Psychiatry 22, 148 (2022). https://doi.org/10.1186/s12888-022-03777-7\n5. Kanato, M., Sarasiri, R., & Leyatikul, P. (Eds.). (2022). ASEAN drug monitoring report 2021. ASEAN Narcotics Cooperation Center.\n6. Moraga, P. (2024). Spatial neighbourhood matrices. In Spatial statistics for Data Science: Theory and practice with R (pp. 83–94). CRC Press.\n7. Thailand. (n.d.). Hands-Off Cain. Retrieved 23 September 2024, from https://www.handsoffcain.info/bancadati/asia-middle-east-australia-and-oceania/thailand-17000464\n8. Tobler, W. R. (1970). A computer movie simulating urban growth in the Detroit region. Economic Geography (Supplement: Proceedings, International Geographical Union. Commission on Quantitative Methods), 46, 234-240. https://doi.org/10.2307/143141\n9. United Nations Development Programme. (2024, March 13). Human Development Report 2023/2024 (PDF). Retrieved September 23, 2024, from https://hdr.undp.org/sites/default/files/reports/3503/hdr2023-24reporten.pdf\n10. World Bank. (n.d.). Gini index. Retrieved September 23, 2024, from https://www.worldbank.org/en/topic/poverty/brief/gini-index\n11. World Bank Open Data. (n.d.). Unemployment, total (% of total labor force) (national estimate) - Thailand. Retrieved 27 September 2024, from https://data.worldbank.org/indicator/SL.UEM.TOTL.NE.ZS?end=2023&locations=TH\n12. World Drug Day report highlights spike in drug use, increased trafficking | UN News. (2024, June 26). United Nations. https://news.un.org/en/story/2024/06/1151446biggest increase from 1873kg in 2020 to 4520kg in 2021 (Kanato et al., 2022).",
    "supporting": [
      "take-home-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}