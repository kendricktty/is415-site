{
  "hash": "062ddf1a9ad2a1586c6bc13ce064cb01",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CE6: Measures of Spatial Autocorrelation\"\nsubtitle: \"In-class Exercise 6\"\nauthor: \"Kendrick Teo\"\ndate: \"2024-09-16\"\ndate-modified: \"last-modified\"\n\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n\n\n## CE6.1 Import packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, spdep, tmap, tidyverse)\n```\n:::\n\n\n\n\n## CE6.2 Preparing data\n\n### CE6.2.1 Importing Hunan data shapefile\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `/Users/kendricktty/Gits/SMU_CS/is415-site/InClass/ICE5/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n\n### CE6.2.2 Importing Hunan 2012 Census Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndev_2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n\n### CE6.2.3 Performing relational join\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- left_join(hunan, dev_2012) %>%\n  select(1:4, 7, 15)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n\n```{.r .cell-code}\n  # Only selects fields we are interested in, in this case GDP per capita\n```\n:::\n\n\n\n\n## CE6.3 Deriving continuity weights: QUEEN method\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- hunan %>%\n    mutate(nb = st_contiguity(geometry),\n            wt = st_weights(nb, style = \"W\"),\n            .before = 1) # Insert into the front - easier to examine later\nwm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n```\n\n\n:::\n:::\n\n\n\n\n## CE6.4 Computing Global Moran's I\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\nglimpse(moranI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n```\n\n\n:::\n\n```{.r .cell-code}\n# K = average neighbours found\n```\n:::\n\n\n\n\n## CE6.5 Performing Global Moran's I Test\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Frequentist method\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n\n```{.r .cell-code}\n# If p < a (usually 0.05), reject null hypothesis H0\n```\n:::\n\n\n\n\n## CE6.6 Permutation Test\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bayesian vs frequentist inference\nset.seed(1234)\nglobal_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 999) # Try to run as many trials as possible\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n\n## CE6.7 Computing Local Moran's I\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>% mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 999), .before = 1) %>%\n        unnest(local_moran) # Create one single table\nlisa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 21\n         ii        eii    var_ii     z_ii    p_ii p_ii_sim p_folded_sim skewness\n      <dbl>      <dbl>     <dbl>    <dbl>   <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.00147  0.000241    5.19e-4 -0.0750  9.40e-1    0.808        0.404   -1.05 \n 2  0.0259  -0.00256     1.16e-2  0.264   7.92e-1    0.956        0.478   -1.02 \n 3 -0.0120  -0.0140      1.12e-1  0.00601 9.95e-1    0.84         0.42     0.934\n 4  0.00102 -0.0000553   4.97e-6  0.483   6.29e-1    0.572        0.286    0.962\n 5  0.0148   0.00232     1.48e-3  0.325   7.45e-1    0.658        0.329    0.820\n 6 -0.0388  -0.00627     6.09e-3 -0.417   6.77e-1    0.822        0.411    0.902\n 7  3.37    -0.0727      1.66e+0  2.67    7.55e-3    0.046        0.023    1.16 \n 8  1.56    -0.118       8.52e-1  1.82    6.89e-2    0.112        0.056    0.887\n 9  4.42    -0.131       1.58e+0  3.63    2.88e-4    0.008        0.004    1.03 \n10 -0.399   -0.00763     7.87e-2 -1.40    1.63e-1    0.178        0.089   -0.897\n# ℹ 78 more rows\n# ℹ 13 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   nb <nb>, wt <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>\n```\n\n\n:::\n\n```{.r .cell-code}\n# p_folded_sim: k-fold replacement\n# p_ii_sim: Moran's I sim\n# Mean, median, skewness:\n# Left skewed/right skewed: use MEDIAN\n# Close to 0: use MEAN\n```\n:::\n\n\n\n\n## CE6.8 Visualising Local Moran's I and p-values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nlocal_moran_map <- tm_shape(lisa) + tm_fill(\"ii\") + tm_borders(alpha = 0.5) + tm_view(set.zoom.limits = c(7, 8)) + tm_layout(main.title = \"Local Moran's I of GDPPC\", main.title.size = 1)\n```\n:::\n\n\n\n\n## CE6.9 Visualising p-values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\np_value_map <- tm_shape(lisa) + tm_fill(\"p_ii_sim\") + tm_borders(alpha = 0.5) + tm_view(set.zoom.limits = c(7, 8)) + tm_layout(main.title = \"Local Moran's I of GDPPC\", main.title.size = 1)\n\n# To plot 2 maps side by side, save the maps to an output and refer to them\n# using tmap_arrange()\ntmap_arrange(local_moran_map, p_value_map, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](in-class-6_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n## CE5.10 LISA map\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa %>% filter(p_ii < 0.05) # Significant\ntm_shape(lisa) + tm_polygons() + tm_borders(alpha = 0.5) + tm_shape(lisa_sig) + tm_fill(\"mean\") + tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](in-class-6_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Purple: low-high outlier\n# Green: low-low cluster\n# Red: high-high cluster\n```\n:::\n\n\n\n\n## CE5.11 Computing local Gi* statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gstat methods give us hot spots and cold spots\n# LISAs give us clusters and outliers\nwm_idw <- hunan %>% \n    mutate(nb = st_contiguity(geometry),\n            wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n            .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n```\n\n\n:::\n\n```{.r .cell-code}\nwm_idw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                                              wts\n1                                      0.01526149, 0.03515537, 0.02176677, 0.02836978, 0.01029857\n2                                      0.01526149, 0.01601100, 0.01911052, 0.02327058, 0.01591694\n3                                                  0.03515537, 0.04581089, 0.04116397, 0.01208437\n4                                                  0.02176677, 0.04581089, 0.04637578, 0.01585302\n5                                                  0.04116397, 0.04637578, 0.01896212, 0.01351099\n6                                      0.01585302, 0.01896212, 0.02710909, 0.01140718, 0.01080890\n7                                                  0.01621067, 0.01536702, 0.01133628, 0.01836488\n8              0.01930410, 0.02675555, 0.02151751, 0.01076895, 0.02608065, 0.01519804, 0.01337412\n9                          0.01930410, 0.01651371, 0.01798519, 0.01473155, 0.03015561, 0.01612293\n10 0.02737233, 0.01390810, 0.01458881, 0.02156771, 0.02419268, 0.02350470, 0.01784174, 0.01621545\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n```\n\n\n:::\n\n```{.r .cell-code}\nHCSA <- wm_idw %>% mutate(local_Gi = local_gstar_perm(GDPPC, nb, wt, nsim = 999), .before = 1) %>%\nunnest(local_Gi)\nHCSA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n   gi_star cluster   e_gi    var_gi  std_dev p_value p_sim p_folded_sim skewness\n     <dbl> <fct>    <dbl>     <dbl>    <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n 1  0.0416 Low     0.0113   6.30e-6  0.0769  9.39e-1 0.786        0.393    0.890\n 2 -0.333  Low     0.0111   7.06e-6 -0.260   7.95e-1 0.954        0.477    0.916\n 3  0.281  High    0.0122   7.77e-6  0.00601 9.95e-1 0.81         0.405    1.17 \n 4  0.411  High    0.0113   7.63e-6  0.489   6.25e-1 0.558        0.279    1.00 \n 5  0.387  High    0.0116   8.72e-6  0.326   7.45e-1 0.62         0.31     1.01 \n 6 -0.368  High    0.0114   6.22e-6 -0.425   6.71e-1 0.802        0.401    0.841\n 7  3.56   High    0.0149   7.44e-6  2.67    7.57e-3 0.04         0.02     1.06 \n 8  2.52   High    0.0134   4.88e-6  1.77    7.72e-2 0.112        0.056    0.880\n 9  4.56   High    0.0142   4.97e-6  3.89    9.92e-5 0.006        0.003    0.770\n10  1.16   Low     0.0108   4.92e-6  1.39    1.63e-1 0.21         0.105    0.730\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis <dbl>, nb <nb>, wts <list>, NAME_2 <chr>,\n#   ID_3 <int>, NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n\n## CE5.12 Visualising Gi* statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA) + tm_fill(\"gi_star\") + tm_borders(alpha = 0.5) + tm_view(set.zoom.limits = c(6, 8))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](in-class-6_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## CE5.13 Visualising hot and cold spot areas\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- HCSA %>% filter(p_sim < 0.05)\ntm_shape(HCSA) + tm_polygons() + tm_borders(alpha = 0.5) + tm_shape(HCSA_sig) + tm_fill(\"gi_star\") + tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](in-class-6_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::",
    "supporting": [
      "in-class-6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}